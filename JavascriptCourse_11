//Chap 11
//83
let p = new Promise((resolve, reject) => {
  resolve('Resolved promise data');
})

p.then(response => console.log(response));


let p = new Promise((resolve, reject) => {
  setTimeout(() => resolve('Resolved promise data'), 3000);
})

p.then(response => console.log(response))
 .catch(error => console.log(error));
 
 
 let p = new Promise((resolve, reject) => {
  setTimeout(() => resolve('Resolved promise data'), 3000);
})

p.then(response => console.log(response))
 .catch(error => console.log(error));
console.log('after promise consumption');


//85
//http://jsonplaceholder.typicode.com/


const root = 'http://jsonplaceholder.typicode.com/posts/1';
fetch(root, {method: "GET"})
  .then(response => console.log(response));
  
  
const root = 'http://jsonplaceholder.typicode.com/posts/1';
fetch(root, {method: "GET"})
  .then(response => response.json())
  .then(json => console.log(json));
